{"version":3,"sources":["components/Card.jsx","components/Header.jsx","components/Disclaimer.jsx","components/Game.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Card","state","clicked","handleClick","props","incorrect","setState","correct","this","score","className","style","display","marginTop","marginBottom","onClick","src","image","alt","max-width","height","margin","Component","Header","justifyContent","highscore","Disclaimer","paddingBottom","Game","highScore","cards","name","img","handleCorrectClick","i","prevState","shuffleArray","handleIncorrectClick","array","length","j","Math","floor","random","temp","map","card","key","position","bottom","width","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bac43d29.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\n\r\nclass Card extends Component {\r\n    state = {\r\n        clicked: false\r\n    }\r\n\r\n    handleClick = () => {\r\n        if (!this.state.clicked) {\r\n            this.setState({clicked: true});\r\n            this.props.correct()\r\n        }\r\n        else {\r\n            this.props.incorrect()\r\n        }\r\n    }\r\n\r\n    // compon () {\r\n    //     if (this.props.score % 12 === 0 || !this.props.score) this.setState({clicked: false});\r\n    // }\r\n    \r\n    componentDidUpdate () {\r\n        if ((this.props.score % 12 === 0 || !this.props.score) && this.state.clicked) this.setState({clicked: false});\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"col m3 s4 imgCard\"\r\n                style={{\r\n                    display: 'flex',\r\n                    marginTop: '1em',\r\n                    marginBottom: '1em'\r\n                }}\r\n            >\r\n                <img onClick={this.handleClick} className=\"white hoverable z-depth-2\" src={this.props.image} alt=\"card\" max-width=\"200px\" height=\"200px\"\r\n                    style={{\r\n                        margin: 'auto'\r\n                    }}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Card;","import React,{Component} from 'react';\r\n\r\nclass Header extends Component {\r\n    render (){\r\n        return(\r\n            <header className=\"red darken-3 z-depth-3 white-text\"\r\n            style={{\r\n                display: 'flex',\r\n                justifyContent: 'space-around'\r\n            }}\r\n            >\r\n                <img className=\"hide-on-med-and-down\" src=\"https://upload.wikimedia.org/wikipedia/en/thumb/8/84/Homestar_Runner_logo.svg/1200px-Homestar_Runner_logo.svg.png\" alt=\"Homestar Logo\"/>\r\n                <h1 className=\"hide-on-med-and-down\">Homestar Clicker dot com</h1>\r\n                <div>\r\n                    <h3>Current Score: {this.props.score}</h3>\r\n                    <h3>High Score: {this.props.highscore}</h3>\r\n                </div>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nexport default function Disclaimer () {\r\n    return ( \r\n    <div className=\"container hide-on-med-and-down\"\r\n        style={{\r\n            marginTop: '5em',\r\n            paddingBottom: '1em'\r\n        }}\r\n    >\r\n        <p>I do not own HomestarRunner.com or any of the characters therein. I am simply a lifelong fan and needed subject matter to do this homework.</p>\r\n        <p>However, if you do want to pay me money for it, I'm not opposed.</p>\r\n        <p>I also accept swag as payment.</p>\r\n    </div>\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport Card from './Card';\r\nimport Header from './Header';\r\nimport Disclaimer from './Disclaimer';\r\n\r\nclass Game extends Component {\r\n    state = {\r\n        score: 0,\r\n        highScore: 0,\r\n        cards: [\r\n            { name: 'Homestar', img: 'https://static.tvtropes.org/pmwiki/pub/images/180px-NewestHomestar_9833.png' },\r\n            { name: 'Marzipan', img: 'https://static.tvtropes.org/pmwiki/pub/images/marzipan_3356.png' },\r\n            { name: 'Pom Pom', img: 'https://static.tvtropes.org/pmwiki/pub/images/pom_pom_5773.PNG' },\r\n            { name: 'Strong Bad', img: 'https://static.tvtropes.org/pmwiki/pub/images/strongbad2kq.png' },\r\n            { name: 'Strong Mad', img: 'https://static.tvtropes.org/pmwiki/pub/images/strong_mad_1184.png' },\r\n            { name: 'Strong Sad', img: 'https://static.tvtropes.org/pmwiki/pub/images/strong_sad_9578.png' },\r\n            { name: 'The Cheat', img: 'https://static.tvtropes.org/pmwiki/pub/images/180px-The_Cheat_Character_Video_5480.PNG' },\r\n            { name: 'Bubs', img: 'https://static.tvtropes.org/pmwiki/pub/images/bubs_5676.png' },\r\n            { name: 'Coach Z', img: 'https://static.tvtropes.org/pmwiki/pub/images/coach_z_7947.png' },\r\n            { name: 'The King of Town', img: 'https://static.tvtropes.org/pmwiki/pub/images/kot_3377.PNG' },\r\n            { name: 'The Poopsmith', img: 'https://static.tvtropes.org/pmwiki/pub/images/psmith_7293.PNG' },\r\n            { name: 'Homsar', img: 'https://static.tvtropes.org/pmwiki/pub/images/180px-homsar_evolution_current_6605.png' }\r\n        ]\r\n    }\r\n\r\n    handleCorrectClick = i => {\r\n        this.setState(prevState => ({ score: ++prevState.score }));\r\n        if (this.state.score >= this.state.highScore) this.setState(prevState => ({ highScore: prevState.score }));\r\n        this.setState(prevState => ({cards: this.shuffleArray(prevState.cards)}))\r\n    }\r\n\r\n    handleIncorrectClick = i => {\r\n        this.setState({ score: 0 });\r\n        this.setState(prevState => ({cards: this.shuffleArray(prevState.cards)}))\r\n}\r\n\r\n\r\n    shuffleArray = (array) => {\r\n        for (let i = array.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            let temp = array[i];\r\n            array[i] = array[j];\r\n            array[j] = temp;\r\n        }\r\n        return array;\r\n    }\r\n\r\n        render() {\r\n            return (\r\n                <div>\r\n                    <Header score={this.state.score} highscore={this.state.highScore} />\r\n                    <div className=\"container grey lighten-3 z-depth-2\"\r\n                        style={{\r\n                            marginTop: '1em'\r\n                        }}\r\n                    >\r\n                        <div className=\"row\">\r\n                            {this.state.cards.map((card, i) => <Card correct={this.handleCorrectClick} incorrect={this.handleIncorrectClick} key={card.name} image={card.img} score={this.state.score} />)}\r\n                        </div>\r\n                        <Disclaimer />\r\n                    </div>\r\n                    <footer className=\"red darken-3 z-depth-3\"\r\n                        style={{\r\n                            position: 'fixed',\r\n                            bottom: '0',\r\n                            width: '100%',\r\n                            display: 'flex',\r\n                            justifyContent: 'center'\r\n                        }}\r\n                    >\r\n                        <div className=\"valign-wrapper\">\r\n                            <img height=\"40px\" src=\"/logo192.png\" alt=\"react logo\"/>\r\n                            <h5 className=\"white-text\">Powered by React.js</h5>\r\n                        </div>\r\n                    </footer>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    export default Game;","import React from 'react';\nimport './App.css';\nimport Game from './components/Game';\n\nfunction App() {\n\n  return (\n    <Game />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}